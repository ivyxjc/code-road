plugins {
    id 'java'
    id 'jacoco'
    id "org.sonarqube" version "2.6.2"
    id 'org.jetbrains.kotlin.jvm' version '1.3.11' apply false
    id "net.saliman.cobertura" version "2.5.4" apply false
    id "org.springframework.boot" version '2.1.1.RELEASE' apply false
    id "io.spring.dependency-management" version "1.0.6.RELEASE" apply false
    id "io.freefair.lombok" version "3.4.0" apply false
    id "me.champeau.gradle.jmh" version "0.4.8" apply false
    id "io.morethan.jmhreport" version "0.9.0" apply false
}

task hello {
    print("${rootProject.projectDir.path}")
}

ext {
    base_version = '0.0.1-SNAPSHOT'

    ivy_tools_version = '0.0.1-SNAPSHOT'

    kotlin_version = '1.3.11'

    commons_lang3_version = '3.7'
    gson_version = '2.8.5'
    guava_version = '27.0.1-jre'
    h2_version = '1.4.197'
    hibernate_version = '5.4.0.Final'
    jaxb_version = '2.3.2'
    jmh_version = '1.21'
    junit_version = '4.12'
    kafka_version = '2.2.0'
    log4j_slf4j_version = '2.11.2'
    lombok_version = '1.18.4'
    mockito_kotlin_version = '1.6.0'
    mockito_version = '2.23.4'
    okio_version = '2.3.0'
    slf4j_version = '1.7.25'
    spring_boot_version = '2.1.1.RELEASE'
    spring_config_version = '2.1.3.RELEASE'
    spring_config_server_version = '2.1.3.RELEASE'
    spring_feign_version = '2.1.2.RELEASE'
    spring_netflix_hystrix_version = '2.1.2.RELEASE'
    spring_netflix_eureka_version = '2.1.2.RELEASE'
    spring_netflix_ribbon_version = '2.1.2.RELEASE'
    spring_netflix_zuul_version = '2.1.2.RELEASE'
    spring_kafka_version = '2.2.6.RELEASE'
}

group 'xyz.ivyxjc'
version base_version

configure(allprojects) { project ->
    group = 'xyz.ivyxjc'

    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'org.jetbrains.kotlin.jvm'

    sourceCompatibility = JavaVersion.VERSION_11

    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url 'https://oss.sonatype.org/content/repositories/releases/' }
    }

    buildDir = "${rootProject.projectDir.path}/build/${rootProject.name}/${project.name}"

    jacoco {
        toolVersion = "0.8.2"
        reportsDir = file("$buildDir/customJacocoReportDir")
    }

    compileJava {
        sourceCompatibility = JavaVersion.VERSION_11 // can be switched to 11 for testing
        targetCompatibility = JavaVersion.VERSION_11
        options.encoding = "UTF-8"
    }

    compileTestJava {
        sourceCompatibility = JavaVersion.VERSION_11  // can be switched to 11 for testing
        targetCompatibility = JavaVersion.VERSION_11
        options.encoding = "UTF-8"
        options.compilerArgs += "-parameters"
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs = ["-Xjsr305=strict"]
        }
    }

    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs = ["-Xjsr305=strict"]
        }
    }

    if (!name.equals('deep-in-log')) {
        sourceSets.main.resources.srcDirs += "${rootProject.projectDir.path}/src/main/resources"
        sourceSets.test.resources.srcDirs += "${rootProject.projectDir.path}/src/test/resources"
    }


    configurations {
        all*.exclude group: 'ch.qos.logback', module: 'logback-core'
        all*.exclude group: 'ch.qos.logback', module: 'logback-classic'
        all*.exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    }

    dependencies {
        testImplementation(group: 'junit', name: 'junit', version: junit_version) {
            exclude group: "org.hamcrest", module: "hamcrest-core"
        }
        testImplementation(group: 'org.mockito', name: 'mockito-core', version: mockito_version) {
            exclude group: "org.hamcrest", module: "hamcrest-core"
        }
        testImplementation(group: 'com.nhaarman', name: 'mockito-kotlin', version: mockito_kotlin_version) {
            exclude module: "kotlin-stdlib"
            exclude module: "kotlin-reflect"
            exclude module: "mockito-core"
        }

        testImplementation group: 'junit', name: 'junit', version: junit_version
        //kotlin
        implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlin_version
        implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version
        //apache
        implementation group: 'org.apache.commons', name: 'commons-lang3', version: commons_lang3_version
        //log
        implementation group: 'org.slf4j', name: 'slf4j-api', version: slf4j_version
        runtimeOnly group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: log4j_slf4j_version

        implementation group: 'xyz.ivyxjc', name: 'ivy-tools', version: ivy_tools_version
//        implementation group: 'xyz.ivyxjc', name: 'tools-commons', version: ivy_tools_version

        //guava
        implementation group: 'com.google.guava', name: 'guava', version: guava_version


        /*
         * Not to use lombok when Kotlin is used. This is determined by module
         */
        //lombok
//        implementation group: 'org.projectlombok', name: 'lombok', version: lombok_version
//        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombok_version

        compileOnly group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
        testCompileOnly group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
    }
}

sonarqube {
    subprojects {
        properties {
            property "sonar.sources", "src/main"
            property "sonar.tests", "src/test"
            property "sonar.jacoco.reportPaths", "$buildDir/customJacocoReportDir"
        }
    }
}


project("deep-in-log") {

}

project("hibernate-demo") {
    dependencies {
        implementation group: 'org.hibernate', name: 'hibernate-core', version: hibernate_version

        //lombok
        implementation group: 'org.projectlombok', name: 'lombok', version: lombok_version
        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombok_version
    }
}

project("java-basic") {
    dependencies {
        implementation group: 'com.lmax', name: 'disruptor', version: '3.4.2'
        implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.14.2'
        implementation group: 'com.squareup.okio', name: 'okio', version: okio_version


    }
}

project("ivy-benchmark") {
    apply plugin: "me.champeau.gradle.jmh"
    apply plugin: "io.morethan.jmhreport"

    jmhReport {
        jmhResultPath = project.file("${rootProject.projectDir.path}/build/${rootProject.name}/${project.name}/reports/jmh/results.json")
        jmhReportOutput = project.file("${rootProject.projectDir.path}/build/${rootProject.name}/${project.name}/reports/jmh/")
    }

    jmh {
        fork = 1
        threads = 8
        warmupIterations = 3
        iterations = 5
        resultFormat = 'JSON'
    }

    dependencies {
        jmh project(":ivy-leaf")

        //jmh
        jmh group: 'org.openjdk.jmh', name: 'jmh-core', version: jmh_version
        jmh group: 'org.openjdk.jmh',
                name: 'jmh-generator-annprocess',
                version: jmh_version
    }
}

project("ivy-leaf") {

}

project("kafka-demo") {

    dependencies {
        implementation group: 'org.apache.kafka', name: 'kafka_2.12', version: kafka_version
        implementation group: 'org.apache.kafka', name: 'kafka-clients', version: kafka_version
        implementation group: 'org.apache.kafka', name: 'kafka-streams', version: kafka_version

        implementation group: 'org.springframework.kafka', name: 'spring-kafka', version: spring_kafka_version
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter', version: spring_boot_version


    }
}

project("spring-cloud") {

    apply plugin: "org.springframework.boot"

    dependencies {
        testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: spring_boot_version
//        implementation group: 'org.springframework.boot', name: 'spring-boot', version: spring_boot_version
//        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: spring_boot_version

        implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-ribbon', version: spring_netflix_ribbon_version
        implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-server', version: spring_netflix_eureka_version
        implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: spring_feign_version
        implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: spring_netflix_hystrix_version
        implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-zuul', version: spring_netflix_zuul_version
        implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-config', version: spring_config_version

        implementation group: 'com.google.code.gson', name: 'gson', version: gson_version

        runtime group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: jaxb_version
    }
}


project("spring-cloud-2") {
    dependencies {
        testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: spring_boot_version

        implementation group: 'org.springframework.cloud', name: 'spring-cloud-config-server', version: spring_config_server_version
        implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: spring_netflix_eureka_version

        implementation group: 'com.google.code.gson', name: 'gson', version: gson_version

        runtime group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: jaxb_version

    }
}

project("spring-security-demo") {
    dependencies {
        testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: spring_boot_version
        /*
         * spring boot start
         */
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: spring_boot_version
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: spring_boot_version
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: spring_boot_version
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: spring_boot_version

        runtimeOnly group: 'org.springframework.boot', name: 'spring-boot-devtools', version: spring_boot_version
        compileOnly group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: spring_boot_version
        /*
         * spring boot end
         */

        //lombok
        implementation group: 'org.projectlombok', name: 'lombok', version: lombok_version
        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombok_version

        runtime group: 'com.h2database', name: 'h2', version: h2_version
    }

}

project("spring-transaction") {
    configurations {
        all*.exclude group: 'ch.qos.logback', module: 'logback-core'
        all*.exclude group: 'ch.qos.logback', module: 'logback-classic'
        all*.exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    }

    dependencies {
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter', version: spring_boot_version
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: spring_boot_version

        implementation group: 'com.alibaba', name: 'druid-spring-boot-starter', version: '1.1.9'

        //lombok
        implementation group: 'org.projectlombok', name: 'lombok', version: lombok_version
        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombok_version

        //mysql jdbc
        implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.16'
        testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: spring_boot_version
    }
}

project("vertx-demo") {
    ext {
        vertx_version = '3.6.2'
    }

    dependencies {
        compile group: 'io.vertx', name: 'vertx-core', version: vertx_version
        compile group: 'io.vertx', name: 'vertx-web', version: vertx_version

        compile group: 'org.apache.poi', name: 'poi', version: '4.0.1'
        compile group: 'org.apache.poi', name: 'poi-ooxml', version: '4.0.1'
    }
}



